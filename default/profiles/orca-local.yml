pollers:
  oldPipelineCleanup:
    enabled: true                  # This enables old pipeline execution cleanup (default: false)
    intervalMs: 3600000            # How many milliseconds between pipeline cleanup runs (default: 1hr or 3600000)
    thresholdDays: 30              # How old a pipeline execution must be to be deleted (default: 30)
    minimumPipelineExecutions: 5   # How many executions to keep around (default: 5)

tasks:
  daysOfExecutionHistory: 180      # How many days to keep old task executions around.
  useManagedServiceAccounts: false
job:
  preconfigured:
    kubernetes:
      - label: Pipeline sync to GitHub-OpsMx
        cloudProvider: kubernetes
        credentials: default
        description: Backup the applications and pipelines from Spinnaker to the GitHub
        account: default
        application: "${execution.application}"
        type: pipelineSyncToGit
        waitForCompletion: true
        parameters:
          - defaultValue: "app1,app2,..."
            description: "Please enter spinnaker applications separated by comma"
            label: Spinnaker applications
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: spinnaker_applications
          - defaultValue: "pipeline1,pipeline2..."
            description: "Please enter spinnaker pipelines separated by comma"
            label: Pipieline names
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: spinnaker_pipelines
          - defaultValue: ""
            description: "Please enter the Specific branch to upload APP/pipeline data to github repo,It is optional if not specified default branch is taken from the configmap"
            label: Branch
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: branch_ui
          - defaultValue: ""
            description: "Please enter the path to upload/download APP/pipeline data to github specific directory,It is optional if not specified default path is taken from the configmap"
            label: SavePath
            mapping: 'manifest.spec.template.spec.containers[0].env[3].value'
            name: rootfolder_ui
        manifest:
            apiVersion: batch/v1
            kind: Job
            metadata:
              generateName: pipepromot-
              namespace: SPINNAKER_NAMESPACE
              labels:
                 stage: opsmx-custom
                 stagetype: pipelinepromotion
            spec:
              backoffLimit: 0
              template:
                spec:
                  containers:
                  - command: ["bash", "scripts/deployer.sh"]
                    image: 'opsmxdev/pipepromot:1.0'
                    imagePullPolicy: IfNotPresent
                    name: pipepromot
                    volumeMounts:
                    - mountPath: /home/opsmx/scripts
                      name: pipe-promot-scripts
                    - mountPath: /home/opsmx/config
                      name: pipe-promot-config
                    - mountPath: /home/opsmx/.spin
                      name: spin-cli-config
                    - name: git-token
                      mountPath: /etc/git-secret
                      readOnly: false
                    env:
                      - name: spinnaker_applications
                        value: 'will be replaced'
                      - name: spinnaker_pipelines
                        value: 'will be replaced'
                      - name: branch_ui
                        value: 'will be replaced'
                      - name: rootfolder_ui
                        value: 'will be replaced'
                      - name: command
                        value: 'upload'
                      - name: git_secret_token
                        valueFrom:
                          secretKeyRef:
                            name: git-token
                            key: git_secret_token
                      - name: git_pr_token
                        valueFrom:
                          secretKeyRef:
                            name: git-token
                            key: git_pr_token
                      - name: git_secret_sshkey
                        value: ""
                        #valueFrom:
                        #  secretKeyRef:
                        #    name: git-token
                        #    key: git_secret_sshkey
                  volumes:
                  - configMap:
                      defaultMode: 420
                      name: pipe-promot-config
                    name: pipe-promot-config
                  - configMap:
                      defaultMode: 420
                      name: pipe-promot-scripts
                    name: pipe-promot-scripts
                  - name: spin-cli-config
                    secret:
                      defaultMode: 420
                      secretName: spin-cli-config
                  - name: git-token
                    secret:
                      defaultMode: 420
                      secretName: git-token
                  restartPolicy: Never
                  serviceAccountName: default
      - label: Pipeline sync to Spinnaker-OpsMx
        cloudProvider: kubernetes
        credentials: default
        description: Syncup the applications and pipelines from GitHub to the Spinnaker
        account: default
        application: "${execution.application}"
        type: pipelineSyncToSpinnaker
        waitForCompletion: true
        parameters:
          - defaultValue: "app1,app2,..."
            description: "Please enter spinnaker applications separated by comma"
            label: Spinnaker Applications
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: spinnaker_applications
          - defaultValue: "pipeline1,pipeline2..."
            description: "Please enter spinnaker pipelines separated by comma"
            label: Pipieline Names
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: spinnaker_pipelines
          - defaultValue: ""
            description: "Please enter the Specific branch to download APP/pipeline data from github repo, It is optional if not specified default branch is taken from the configmap" 
            label: Branch
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: branch_ui
          - defaultValue: ""
            description: "Please enter the path to upload/download APP/pipeline data to github specific directory,It is optional if not specified default path is taken from the configmap"
            label: SavePath
            mapping: 'manifest.spec.template.spec.containers[0].env[3].value'
            name: rootfolder_ui
        manifest:
            apiVersion: batch/v1
            kind: Job
            metadata:
              generateName: pipepromot-
              namespace: SPINNAKER_NAMESPACE
              labels:
                 stage: opsmx-custom
                 stagetype: pipelinepromotion
            spec:
              backoffLimit: 0
              template:
                spec:
                  containers:
                  - command: ["bash", "scripts/deployer.sh"]
                    image: 'opsmxdev/pipepromot:1.0'
                    imagePullPolicy: IfNotPresent
                    name: pipepromot
                    volumeMounts:
                    - mountPath: /home/opsmx/scripts
                      name: pipe-promot-scripts
                    - mountPath: /home/opsmx/config
                      name: pipe-promot-config
                    - mountPath: /home/opsmx/.spin
                      name: spin-cli-config
                    - name: git-token
                      mountPath: /etc/git-secret
                      readOnly: false
                    env:
                      - name: spinnaker_applications
                        value: 'will be replaced'
                      - name: spinnaker_pipelines
                        value: 'will be replaced'
                      - name: branch_ui
                        value: 'will be replaced'
                      - name: rootfolder_ui
                        value: 'will be replaced'
                      - name: command
                        value: 'download'
                      - name: git_secret_token
                        valueFrom:
                          secretKeyRef:
                            name: git-token
                            key: git_secret_token
                      - name: git_pr_token
                        valueFrom:
                          secretKeyRef:
                            name: git-token
                            key: git_pr_token
                      - name: git_secret_sshkey
                        value: ""
                        #valueFrom:
                        #  secretKeyRef:
                        #    name: git-token
                        #    key: git_secret_sshkey
                  volumes:
                  - configMap:
                      defaultMode: 420
                      name: pipe-promot-config
                    name: pipe-promot-config
                  - configMap:
                      defaultMode: 420
                      name: pipe-promot-scripts
                    name: pipe-promot-scripts
                  - name: spin-cli-config
                    secret:
                      defaultMode: 420
                      secretName: spin-cli-config
                  - name: git-token
                    secret:
                      defaultMode: 420
                      secretName: git-token
                  restartPolicy: Never
                  serviceAccountName: default
      - label: "Update PR-OpsMx"
        cloudProvider: kubernetes
        credentials: default
        application: "${execution.application}"
        description: Update the PR with the comment
        account: default
        type: customPRStage
        waitForCompletion: true
        parameters:
          - defaultValue: "" 
            description: Please enter the webhook url.
            label: Webhook URL
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: url
          - defaultValue: "" 
            description: Please enter method.
            label: Method
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: method
          - defaultValue: "" 
            description: Please enter payload.
            label: Payload
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: payload
        manifest:
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: updateprjob-
            namespace: SPINNAKER_NAMESPACE
            labels:
               stage: opsmx-custom
               stagetype: updatepr
          spec:
            backoffLimit: 0
            template:
              spec:
                containers: 
                  - command:
                      - sh
                      - /tmp/initscript/run.sh
                    env:
                      - name: url
                        value: 
                      - name: method
                        value:
                      - name: payload
                        value: 
                      - name: accesstoken
                        valueFrom:
                         secretKeyRef:
                          key: accesstoken
                          name: updatepr-secrets
                    image: 'opsmxdev/apline-with-curl'
                    imagePullPolicy: Always
                    name: updatepr
                    volumeMounts:
                      - mountPath: /tmp/initscript/
                        name: initscript
                restartPolicy: Never
                volumes:
                  - configMap:
                      default: 420
                      name: updatepr-config
                    name: initscript
      - label: Custom notification-OpsMx
        cloudProvider: kubernetes
        credentials: default
        application: "${execution.application}"
        description: Email notification that supports SPEL expression as mailid
        account: default
        type: customnotification
        waitForCompletion: true
        parameters:
          - defaultValue: "" 
            description: Please enter the Email address
            label: Email
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: email
          - defaultValue: ""
            description: Please enter CC mail address with "," as saperated for more mails.
            label: CC Address
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: ccmail
          - defaultValue: ""
            description: Please enter Subject
            label: Subject
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: subject
          - defaultValue: ""
            description: Please enter body message.
            label: Body Message
            mapping: 'manifest.spec.template.spec.containers[0].env[3].value'
            name: body
        manifest:
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: smtpjob-
            namespace: SPINNAKER_NAMESPACE
            labels:
               stage: opsmx-custom
               stagetype: customnotification
          spec:
            backoffLimit: 0
            template:
              spec:
                containers:
                  - command:
                      - sh
                      - /tmp/initscript/run.sh
                    env:
                      - name: email
                        value: 
                      - name: ccmail
                        value:
                      - name: subject
                        value:
                      - name: body
                        value:
                      - name: ssmtpemail                                  
                        valueFrom:                                           
                         secretKeyRef:                                       
                          key: ssmtpemail                                   
                          name: ssmtp-secrets
                      - name: emailpassword                                    
                        valueFrom:                                           
                         secretKeyRef:                                       
                          key: emailpassword                                  
                          name: ssmtp-secrets
                    image: 'opsmxdev/apline-with-curl'
                    imagePullPolicy: Always
                    name: email-notify
                    volumeMounts:
                      - mountPath: /tmp/initscript/
                        name: initscript
                restartPolicy: Never
                volumes:
                  - configMap:
                      default: 420
                      name: email-config
                    name: initscript
      - label: Ansible-OpsMx
        cloudProvider: kubernetes
        credentials: default
        application: "${execution.application}"
        description: Run playbooks to a single VM node 
        account: default
        type: customAnsibleStage
        waitForCompletion: true
        parameters:
          - defaultValue: "" 
            description: Please enter the  Git repo url with out https://
            label: Git repo
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: gitrepo
          - defaultValue: "" 
            description: Please enter ansiblefile location.
            label: Ansible file
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: ansiblefileepo
          - defaultValue: "" 
            description: Please enter override inventoryfile.
            label: Inventory file
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: inventoryfile
        manifest:
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: ansiblejob-
            namespace: SPINNAKER_NAMESPACE
            labels:
               stage: opsmx-custom
               stagetype: ansible
          spec:
            backoffLimit: 0
            template:
              spec:
                containers:
                  - command:
                      - bash
                      - /tmp/initscript/run.sh
                    env:
                      - name: gitrepo
                        value: 
                      - name: ansiblefile
                        value:
                      - name: inventoryfile
                        value: 
                      - name: gitusername
                        valueFrom:
                         secretKeyRef:
                          key: gitusername
                          name: ansible-secrets
                      - name: gitpassword
                        valueFrom:
                         secretKeyRef:
                          key: gitpassword
                          name: ansible-secrets
                      - name: nodeuser                                    
                        valueFrom:                                           
                         secretKeyRef:                                       
                          key: nodeuser                                   
                          name: ansible-secrets
                      - name: userpassword                                    
                        valueFrom:                                           
                         secretKeyRef:                                       
                          key: userpassword                                  
                          name: ansible-secrets
                    image: 'opsmx11/ansible-job-image:v2'
                    imagePullPolicy: Always
                    name: ansible-test
                    volumeMounts:
                      - mountPath: /tmp/initscript/
                        name: initscript
                restartPolicy: Never
                volumes:
                  - configMap:
                      default: 420
                      name: ansible-config
                    name: initscript
      - label: Terraform plan-OpsMx
        cloudProvider: kubernetes
        application: "${execution.application}"
        description: Stage for Terraform plan operation
        account: default
        type: customTSPlanJobStage
        waitForCompletion: true
        parameters:
          - defaultValue: ""
            description: "Please enter the AWS Assure role configured account name."
            label: AWS account name
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: awsrole
          - defaultValue: ""
            description: "Please enter the namespace of spinnaker in HA mode."
            label: Spinnaker Namespace
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: namespace
          - defaultValue: ""
            description: "Please enter the artifact account name from artifactsaccounts.json, Account where you have tf script present.It is optional if not specified default branch is taken from the configmap"
            label: Tf script account
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: scriptaccount
          - defaultValue: "" 
            description: "Please enter the Git Repo Account of TF script."
            label: Tf Plan script Repo
            mapping: 'manifest.spec.template.spec.containers[0].env[3].value'
            name: repo
          - defaultValue: "" 
            description: Please enter Location of terraform script in the repo.
            label: Tf Location
            mapping: 'manifest.spec.template.spec.containers[0].env[4].value'
            name: location
          - defaultValue: "" 
            description: Please enter overrideVariableFile path if you want to override variables.
            label: Override file
            mapping: 'manifest.spec.template.spec.containers[0].env[5].value'
            name: overridefile
          - defaultValue: ""
            description: Please enter terraform workspace name.
            label: Terraform Workspace
            mapping: 'manifest.spec.template.spec.containers[0].env[6].value'
            name: TF_WORKSPACE
        manifest:
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: terraspinplanjob-
            namespace: SPINNAKER_NAMESPACE
            labels:
               stage: opsmx-custom
               stagetype: terraform
          spec:
            backoffLimit: 0
            template:
              spec:
                containers:
                  - command: 
                      - role.sh 
                    env:
                      - name: awsrole
                        value:
                      - name: namespace
                        value:
                      - name: scriptaccount
                        value:
                      - name: repo
                        value: 
                      - name: location
                        value: 
                      - name: overridefile
                        value: 
                      - name: TF_WORKSPACE
                        value:  
                      - name: command
                        value: plan
                    image: 'quay.io/opsmxpublic/customterraformstage:terraform-1.1.7-isd-backendconfig'
                    imagePullPolicy: Always
                    name: terraspinplan
                    volumeMounts:
                      - mountPath: /home/terraspin/opsmx/app/config/
                        name: opsmx-terraspin-backend-config
                restartPolicy: Never
                volumes:
                  - secret:
                      secretName: terraspinbackendconfig
                    name: opsmx-terraspin-backend-config
      - label: Terraform apply-OpsMx
        cloudProvider: kubernetes
        application: "${execution.application}"
        description: Stage for Terraform apply operation
        account: default
        type: customTSApplyJobStage
        waitForCompletion: true
        parameters:
          - defaultValue: ""
            description: "Please enter the AWS Assure role configured account name."
            label: AWS account name
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: awsrole
          - defaultValue: ""
            description: "Please enter the namespace of spinnaker in HA mode."
            label: Spinnaker Namespace
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: namespace
          - defaultValue: ""
            description: "Please enter the artifact account name from artifactsaccounts.json, Account where you have tf script present."
            label: Tf script account
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: scriptaccount
          - defaultValue: "" 
            description: "Please enter the Git Repo Account of TF script."
            label: Tf Plan script Repo
            mapping: 'manifest.spec.template.spec.containers[0].env[3].value'
            name: repo
          - defaultValue: "" 
            description: Please enter Location of terraform script in the repo.
            label: Tf Location
            mapping: 'manifest.spec.template.spec.containers[0].env[4].value'
            name: location
          - defaultValue: "" 
            description: Please enter overrideVariableFile path if you want to override variables.
            label: Override file
            mapping: 'manifest.spec.template.spec.containers[0].env[5].value'
            name: overridefile
          - defaultValue: ""
            description: Please enter terraform workspace name.
            label: Terraform Workspace
            mapping: 'manifest.spec.template.spec.containers[0].env[6].value'
            name: TF_WORKSPACE  
        manifest:
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: terraspinapplyjob-
            namespace: SPINNAKER_NAMESPACE
            labels:
               stage: opsmx-custom
               stagetype: terraform
          spec:
            backoffLimit: 0
            template:
              spec:
                containers:
                  - command:
                      - role.sh
                    env:
                      - name: awsrole
                        value:
                      - name: namespace
                        value:
                      - name: scriptaccount
                        value:
                      - name: repo
                        value: 
                      - name: location
                        value: 
                      - name: overridefile
                        value: 
                      - name: TF_WORKSPACE
                        value:          
                      - name: command
                        value: apply
                    image: 'quay.io/opsmxpublic/customterraformstage:terraform-1.1.7-isd-backendconfig'
                    imagePullPolicy: Always
                    name: terraspinapply
                    volumeMounts:
                      - mountPath: /home/terraspin/opsmx/app/config/
                        name: opsmx-terraspin-backend-config
                restartPolicy: Never
                volumes:
                  - secret:
                      secretName: terraspinbackendconfig
                    name: opsmx-terraspin-backend-config
      - label: Terraform destroy-OpsMx
        application: "${execution.application}"
        cloudProvider: kubernetes
        credentials: default
        description: Stage for Terraform destroy operation
        account: default
        type: customTSDestroyJobStage
        waitForCompletion: true
        parameters:
          - defaultValue: ""
            description: "Please enter the AWS Assure role configured account name."
            label: AWS account name
            mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
            name: awsrole
          - defaultValue: ""
            description: "Please enter the namespace of spinnaker in HA mode."
            label: Spinnaker Namespace
            mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
            name: namespace
          - defaultValue: ""
            description: "Please enter the artifact account name from artifactsaccounts.json, Account where you have tf script present."
            label: Tf script account
            mapping: 'manifest.spec.template.spec.containers[0].env[2].value'
            name: scriptaccount
          - defaultValue: "" 
            description: "Please enter the Git Repo Account of TF script."
            label: Tf Plan script Repo
            mapping: 'manifest.spec.template.spec.containers[0].env[3].value'
            name: repo
          - defaultValue: "" 
            description: Please enter Location of terraform script in the repo.
            label: Tf Location
            mapping: 'manifest.spec.template.spec.containers[0].env[4].value'
            name: location
          - defaultValue: "" 
            description: Please enter overrideVariableFile path if you want to override variables.
            label: Override file
            mapping: 'manifest.spec.template.spec.containers[0].env[5].value'
            name: overridefile
          - defaultValue: ""
            description: Please enter terraform workspace name.
            label: Terraform Workspace
            mapping: 'manifest.spec.template.spec.containers[0].env[6].value'
            name: TF_WORKSPACE
        manifest:
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: terraspindestroyjob-
            namespace: SPINNAKER_NAMESPACE
            labels:
               stage: opsmx-custom
               stagetype: terraform
          spec:
            backoffLimit: 0
            template:
              spec:
                containers:
                  - command:
                      - role.sh
                    env:
                      - name: awsrole
                        value:
                      - name: namespace
                        value:
                      - name: scriptaccount
                        value:
                      - name: repo
                        value: 
                      - name: location
                        value: 
                      - name: overridefile
                        value: 
                      - name: TF_WORKSPACE
                        value: 
                      - name: command
                        value: destroy
                    image: 'quay.io/opsmxpublic/customterraformstage:terraform-1.1.7-isd-backendconfig'
                    imagePullPolicy: Always
                    name: terraspindestroy
                    volumeMounts:
                      - mountPath: /home/terraspin/opsmx/app/config/
                        name: opsmx-terraspin-backend-config
                restartPolicy: Never
                volumes:
                  - secret:
                      secretName: terraspinbackendconfig
                    name: opsmx-terraspin-backend-config

webhook:
  preconfigured:
  - label: "ServiceNow: Create a change request-OpsMx"
    type: CreateServiceNowChangeRequest
    enabled: true
    description: ServiceNow normal request creation
    method: POST
    url: SERVICENOW_URL/api/sn_chg_rest/v1/change
    customHeaders:
      Authorization: Basic SERVICENOW_BASE64_USR_PASSWD
      Content-Type: application/json
    payload: |-
      {
        "delivery_plan":"${parameterValues['deliveryplan']}",
        "impact":"${parameterValues['impact']}",
        "priority":"${parameterValues['priority']}",
        "change_plan":"${parameterValues['changeplan']}",
        "short_description":"${parameterValues['shortdescription']}",
        "description":"${parameterValues['description']}",
        "implementation_plan":"${parameterValues['implementationplan']}",
        "backout_plan":"${parameterValues['backoutplan']}",
        "type":"${parameterValues['type']}"
      }
    parameters:
    - label: Delivery Plan
      name: deliveryplan
      description: Delivery plan
      type: string
    - label: Impact
      name: impact
      description: 1-High, 2-Medium, 3-Low. Mention 1 or 2 or 3 in the column.
      type: string
    - label: Priority
      name: priority
      description: 1-Critical, 2-High, 3-Moderate, 4-Low
      type: string
    - label: Change Plan
      name: changeplan
      description: Change plan
      type: string
    - label: Short Description
      name: shortdescription
      description: Short description
      type: string
    - label: Description
      name: description
      description: Description
      type: string
    - label: Implementation Plan
      name: implementationplan
      description: Implementation plan
      type: string
    - label: Backout Plan
      name: backoutplan
      description: Backout plan
      type: string
    - label: Type
      name: type
      description: Emergency, Normal etc 
      type: string
  - label: "ServiceNow: Change request Status-OpsMx"
    type: ChangeStateofChangeRequest
    enabled: true
    description: ServiceNow change the state of the normal request
    method: PATCH
    url: SERVICENOW_URL/api/sn_chg_rest/v1/change/${parameterValues['sysid']}
    customHeaders:
      Authorization: Basic SERVICENOW_BASE64_USR_PASSWD
      Content-Type: application/json
    payload: |-
      {
        "assignment_group":"${parameterValues['assignmentgroup']}",
        "state":"${parameterValues['state']}"
      }
    parameters:
    - label: Assignment Group
      name: assignmentgroup
      description: Assignment group to approval the state change Eg- CAB Approval 
      type: string
    - label: State
      name: state
      description: Change to which state? Eg- Assess 
      type: string
    - label: sys_id
      name: sysid
      description: Sys id of the request. Can get from url of the request Eg-7067852307303010268affa08c1ed0a6
      type: string
  - label: "ServiceNow: Add a work note to the change request-OpsMx"
    type: AddWorkNotetoChangeRequst
    enabled: true
    description: ServiceNow add work note to normal request
    method: PATCH
    url: SERVICENOW_URL/api/sn_chg_rest/change/${parameterValues['sysid']}
    customHeaders:
      Authorization: Basic SERVICENOW_BASE64_USR_PASSWD
      Content-Type: application/json
    payload: |-
      {
        "work_notes":"${parameterValues['worknotes']}"
      }
    parameters:
    - label: Work Notes
      name: worknotes
      description: Add work notes to the request 
      type: string
    - label: sys_id
      name: sysid
      description: Sys id of the request. Can get from url of the request Eg-7067852307303010268affa08c1ed0a6
      type: string
  - label: "ServiceNow: Wait for state-OpsMx"    
    type: waitServiceNowState          
    enabled: true                    
    description: Waits for a specific state on a ServiceNow issue
    method: GET                                                              
    url: SERVICENOW_URL/api/sn_chg_rest/change/${parameterValues['sysid']}
    customHeaders:                                                                       
      Authorization: Basic SERVICENOW_BASE64_USR_PASSWD
      Content-Type: application/json                                                     
    failPipeline: true                                                                   
    progressJsonPath: "result.state.display_value"                                               
    payload: ""                                                                          
    retryStatusCodes:                                                                    
      - 200                                                                              
    statusJsonPath: "result.state.display_value"                                                 
    statusUrlResolution: "getMethod"                                                   
    successStatuses: ${parameterValues['success']}                                       
    retryStatuses: ${parameterValue['retry']}                                            
    terminalStatuses: ${parameterValues['terminate']}                                    
    canceledStatuses: ${parameterValues['cancel']}                                       
    waitBeforeMonitor: "1"                                                             
    waitForCompletion: true                                                            
    parameters:                                                                          
    - label: Sys id                            
      name: sysid                                                                        
      description: "sys id of the request"
      type: string                                                                     
      defaultValue: ""                                                
    - label: Service Now Success States              
      name: success                                                              
      description: "Service Now issue States that progress the pipeline, e.g,: In Verificaiton etc."
      type: string
      defaultValue: ""  
    - label: Service Now Retry States                                                     
      name: retry                                                                  
      description: "Service Now issue states that Retry the stage e.g,: New etc. Can give multiple states coma seperated"
      type: string                                                                        
      defaultValue: ""
    - label: Service Now Termination States                                                          
      name: terminate           
      description: "Service Now issue states that terminates the pipeline, e.g,: Done etc."    
      type: string                                                                        
      defaultValue: ""                                                             
    - label: Service Now Canceled States                                                         
      name: cancel                                                                           
      description: "Service Now issue states that cancel the pipeline e.g,: Closed, etc."             
      type: string                                                                           
      defaultValue: Closed 
  - label: "JIRA: Wait for state-OpsMx"
    type: waitJiraState
    enabled: true
    description: Stage that waits for a specific state on a Jira issue
    method: GET
    url: JIRA_URL/rest/api/latest/issue/${parameterValues['issue']}
    customHeaders:
      ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
      Authorization: Basic JIRA_BASE64_USR_PASSWD
      Content-Type: application/json
    failPipeline: true
    progressJsonPath: "fields.status.name"
    payload: ""
    retryStatusCodes:
      - 200
    statusJsonPath: "fields.status.name"
    statusUrlResolution: "getMethod"
    successStatuses: ${parameterValues['success']}
    retryStatuses: ${parameterValue['retry']}
    terminalStatuses: ${parameterValues['terminate']}
    canceledStatuses: ${parameterValues['cancel']}
    waitBeforeMonitor: "1"
    waitForCompletion: true
    parameters:
    - label: JIRA Issue ID
      name: issue
      description: "The JIRA issue, the default relies on JIRA issue ID extraction"
      type: string
      defaultValue: ${jira_issue}
    - label: JIRA Retry States
      name: retry
      description: "JIRA issue states that Retry the stage e.g,: To Do, In Progress, etc."
      type: string
      defaultValue: To Do, In Progress
    - label: JIRA Success States
      name: success
      description: "JIRA issue States that progress the pipeline, e.g,: In Verificaiton etc."
      type: string
      defaultValue: In Verification
    - label: JIRA Temination States
      name: terminate
      description: "JIRA issue states that terminates the pipeline, e.g,: PR Raised etc."
      type: string
      defaultValue: PR Raised
    - label: JIRA Canceled States
      name: cancel
      description: "JIRA issue states that cancel the pipeline e.g,: Done, etc."
      type: string
      defaultValue: Done
  - label: "JIRA: Create an issue-OpsMx"
    type: addJiraIss
    enabled: true
    description: Stage that add an issue in Jira
    method: POST
    url: JIRA_URL/rest/api/2/issue/
    customHeaders:
     ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
     Authorization: Basic JIRA_BASE64_USR_PASSWD
     Content-Type: application/json
    payload: |-
      {
        "fields": {
           "project":
            {
              "key": "${parameterValues['projectid']}"
            },
            "summary": "${parameterValues['summary']}",
            "description": "${parameterValues['description']}",
            "issuetype": {
              "name": "${parameterValues['issuetype']}"
            },
            "components": [
                {
              "id": "${parameterValues['components']}"
            }
            ],
            "priority": {
              "name": "${parameterValues['priority']}"
            }
        }
      }
    parameters:
    - label: Project ID ("ENG" or "DOCS")
      name: projectid
      description: Which JIRA project do you want to create an item in?
      type: string
    - label: Issue Type ("Improvement", "Task", "New Feature", or "Bug")
      name: issuetype
      description: issuetype
      type: string
    - label: Priority ("Low", "Medium", or "High")
      name: priority
      description: priority
      type: string
    - label: Components ("10103")
      name: components
      description: component of the project
    - label: Issue Summary
      name: summary
      description: summary
      type: string
    - label: Description
      name: description
      description: description
      type: string
  - label: "JIRA: Comment on issue-OpsMx"
    type: comJiraIss
    enabled: true
    description: Stage that posts a comment in a Jira issue
    method: POST
    url: JIRA_URL/rest/api/latest/issue/${parameterValues['issue']}/comment
    customHeaders:
      ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
      Authorization: Basic JIRA_BASE64_USR_PASSWD
      Content-Type: application/json
    payload: |-
      {
        "body": "${parameterValues['message']}"
      }
    parameters:
    - label: Issue ID
      name: issue
      description: Issue
      type: string
    - label: Message
      name: message
      description: message
      type: string
  - label: "JIRA: Update issue-OpsMx"
    type: updJiraIss
    enabled: true
    description: Stage that updates an issue in Jira
    method: PUT
    url: JIRA_URL/rest/api/latest/issue/${parameterValues['issue']}
    customHeaders:
      ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
      Authorization: Basic JIRA_BASE64_USR_PASSWD
      Content-Type: application/json
    payload: |-
      {
        "update": {
            "summary": [
                {
                    "set": "${parameterValues['summary']}"
                }
            ],
            "description": [
                {
                   "set": "${parameterValues['description']}"
                }
            ]
        }
      }
    parameters:
    - label: Issue ID
      name: issue
      description: Issue
      type: string
    - label: Summary
      name: summary
      description: summary
      type: string
    - label: Description
      name: description
      description: description
  - label: "JIRA: Transition issue-OpsMx"
    type: transJiraIss
    enabled: true
    description: Stage that transitions an issue in Jira
    method: POST
    url: JIRA_URL/rest/api/latest/issue/${parameterValues['issue']}/transitions
    customHeaders:
      ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
      Authorization: Basic JIRA_BASE64_USR_PASSWD
      Content-Type: application/json
    payload: |-
      {
        "transition": {
          "id": "${parameterValues['targetStageID']}"
        }
      }
    parameters:
    - label: Issue ID
      name: issue
      description: Issue
      type: string
    - label: Target Stage ID
      name: targetStageID
      description: Target Stage ID (11 is "To Do", 21 is "In Progress", 31 is "In Review", 41 is "Done")
      type: string
  - label: "ServiceDesk: Create request-OpsMx"
    type: CreateServiceDeskrequest (issue)
    enabled: true
    description: Stage that create an request in ServiceDesk
    method: POST
    url: https://<URL>/rest/servicedeskapi/request
    customHeaders:
      Authorization: Basic USER/PASSWORD-BASE64
      Content-Type: application/json
    payload: |-
      {
        "serviceDeskId": "${parameterValues['projectid']}",
        "requestTypeId": "${parameterValues['requesttypeid']}",
        "requestFieldValues": {
        "summary": "${parameterValues['summary']}",
        "description": "${parameterValues['description']}"
        },
        "requestParticipants": [
          "${parameterValues['requestParticipants']}"
        ]
      }
    parameters:
    - label: Project ID 
      name: projectid
      description: Which Servicedesk project do you want to create an item in?
      type: string
    - label: Request Type Id
      name: requesttypeid
      description: Request type like id "25" for IT HELP 
      type: string
    - label: Summary
      name: summary
      description: summary of the request
      type: string
    - label: Request Participants
      name: requestParticipants
      description: requestParticipants of the request
      type: string
    - label: Description
      name: description
      description: Description of the request
      type: string   
  - label: "ServiceDesk: Comment on issue-OpsMx"
    type: Coment ServiceDesk Issue
    enabled: true
    description: Stage that post a comment in a ServiceDesk issue
    method: POST
    url: https://<URL>/rest/servicedeskapi/request/${parameterValues['issue']}/comment
    customHeaders:
      Authorization: Basic USER/PASSWORD-BASE64
      Content-Type: application/json
    payload: |-
      {
        "body": "${parameterValues['message']}",
        "public": true
      }
    parameters:
    - label: Issue ID
      name: issue
      description: Issue
      type: string
    - label: Message
      name: message
      description: message
      type: string
  - label: "ServiceDesk: Wait for state-OpsMx"
    type: waitservicedeskstate
    enabled: true
    description: Stage that waits for a specific state on a Servicedesk issue
    method: GET
    url: https://<URL>/rest/servicedeskapi/request/${parameterValues['issue']}/status
    customHeaders:
      Authorization: Basic USER/PASSWORD-BASE64
      Content-Type: application/json
    failPipeline: true
    progressJsonPath: "values[0].status"
    payload: ""
    retryStatusCodes:
      - 200
    statusJsonPath: "values[0].status"
    statusUrlResolution: "getMethod"
    successStatuses: ${parameterValues['success']}
    retryStatuses: ${parameterValue['retry']}
    canceledStatuses: ${parameterValues['cancel']}
    waitBeforeMonitor: "1"
    waitForCompletion: true
    parameters:
    - label: ServiceDesk Issue ID
      name: issue
      description: "The ServiceDesk issue, the default relies on ServiceDesk issue ID extraction"
      type: string
      defaultValue: 
    - label: ServiceDesk Retry States
      name: retry
      description: "ServiceDesk issue states that Retry the stage e.g,: To Do, In Progress, etc."
      type: string
      defaultValue: To Do, In Progress
    - label: ServiceDesk Success States
      name: success
      description: "ServiceDeskissue States that progress the pipeline, e.g,: In Verificaiton etc."
      type: string
      defaultValue: In Verification
    - label: ServiceDesk Canceled States
      name: cancel
      description: "ServiceDesk issue states that cancel the pipeline e.g,: Done, etc."
      type: string
      defaultValue: Done
  - label: "ServiceDesk: Transition issue-OpsMx"
    type: transservicedesk issue status
    enabled: true
    description: Stage that transitions an Servicedesk request status 
    method: POST
    url: https://<URL>/rest/servicedeskapi/request/${parameterValues['issue']}/transition
    customHeaders:
      Authorization: Basic USER/PASSWORD-BASE64
      Content-Type: application/json
      X-ExperimentalApi: opt
    payload: |-
     {
        "id": "${parameterValues['targetStageID']}",
        "additionalComment": {
            "body": "${parameterValues['body']}"
        }
     }
    parameters:
    - label: Issue ID
      name: issue
      description: Issue
      type: string
    - label: Target Stage ID
      name: targetStageID
      description: Target ID from the workflow of project
      type: string
    - label: Body
      name: body
      description: Current status as a comment to change the transition 
      type: string
spinnaker:
  extensibility:
    plugins:
      Opsmx.VerificationGatePlugin:
        enabled: true
        version: 1.0.1
        config:
      Opsmx.VisibilityApprovalPlugin:
        enabled: true
        version: 1.0.1
        config:
      Opsmx.TestVerificationGatePlugin:
        enabled: true
        version: 1.0.1
        config:
      Opsmx.PolicyGatePlugin:
        enabled: true
        version: 1.0.1
        config:
      Opsmx.RbacPlugin:
        enabled: true
        version: 1.0.1
        config:
policy:
  opa:
    enabled: true
    url: http://oes-sapor:8085

isd:
  gate:
     url: PROTOCOL://OVERRIDE_API_URL
